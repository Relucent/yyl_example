/**
 * <pre>
 * ★排序算法★_____★平均情况★________★最好情况★_______★最坏情况★_________★辅助存储★_______★稳定性 ★  
 * ├─插入排序   
 * │  ├─直接插入__#O(n^2)_________#O(n)__________#O(n^2)_________#O(1)__________#稳定  
 * │  └─希尔排序__#O(n^1.3)_______#O(n)__________#O(n^2)_________#O(1)__________#不稳定  
 * ├─选择排序  
 * │  ├─直接选择__#O(n^2)_________#O(n^2)________#O(n^2)_________#O(1)__________#不稳定  
 * │  └─堆排序___#O(n*log2(n))___#O(n*log2(n))__#O(n*log2(n))___#O(1)__________#不稳定  
 * ├─交换排序  
 * │  ├─冒泡排序__#O(n^2)_________#O(n)__________#O(n^2)_________#O(1)__________#稳定  
 * │  └─快速排序__#O(n*log2(n))___#O(n*log2(n))__#O(n^2)_________#O(n*log2(n))__#不稳定  
 * ├─归并排序_____#O(n*log2(n))___#O(n*log2(n))__#O(n*log2(n))___#O(n)__________#稳定  
 * └─基数排序_____#O(d(r+n))______#O(d(n+rd))____#O(d(r+rd))_____#O(rd+n)_______#稳定
 * </pre>
 * 
 * <br>
 * 稳定性：通俗地讲，就是指在排序过程中两个相等的数不会交换位置。<br>
 * <br>
 * <br>
 * 排序算法中英文对照 <br>
 * 插入排序 ：InsertSort<br>
 * 希尔排序 ：ShellSort<br>
 * 选择排序：SelectionSort<br>
 * 堆排序 ： HeapSort<br>
 * 冒泡排序：BubbleSort<br>
 * 快速排序：QuickSort<br>
 * 归并排序：MergeSort<br>
 * 基数排序：BucketSort<br>
 */
package yyl.example.basic.algorithm.sort;
