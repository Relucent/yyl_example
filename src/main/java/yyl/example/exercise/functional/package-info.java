/**
 * <h2>函数式编程(functional programming)</h2><br>
 * "函数式编程" 是一种 "编程范式"（programming paradigm），也就是如何编写程序的方法论。<br>
 */
package yyl.example.exercise.functional;

//| 函数式编程是一种编程范式，我们常见的编程范式有命令式编程和函数式编程。  
//| 1. 命令式编程是面向计算机硬件的抽象，有变量，赋值语句，表达式，控制语句。命令式语言是植根于冯·诺依曼体系的，命令式程序就是一个冯诺依曼机的指令序列。（常见的面向对象编程是也是一种命令式编程）
//| 2. 函数式编程是将计算机运算看作是数学中函数的计算，并且避免了状态以及变量的概念。  
//| 函数式编程具有五个特点：1.函数是"第一等公民"；2.只用"表达式"，不用"语句"；3.没有"副作用"；4.不修改状态；5.引用透明。
//| 函数式编程的意义：1.代码简洁，开发快速； 2.接近自然语言，易于理解；3.更方便的代码管理；4.易于"并发编程"；5.代码的热升级。
